{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["hundreddays","Date","render","days","hours","minutes","seconds","Title","styled","h1","Grid","div","Row","ÖMSpan","props","size","span","error404","date","renderer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qPAIMA,EAAc,IAAIC,KAAK,uBAEvBC,EAAS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACtC,OACE,iCACG,IACAH,EAFH,SAEeC,EAFf,UAE6BC,EAF7B,gBAEmDC,EAFnD,oBAOEC,EAAQC,IAAOC,GAAV,sJAQLC,EAAOF,IAAOG,IAAV,wGAQJC,EAAMJ,IAAOG,IAAV,iEAYIE,GALML,IAAOG,IAAV,2DACN,SAACG,GAAD,OAAWA,EAAMC,QAILP,IAAOQ,KAAV,uDAyBJC,EApBE,WACf,OACE,mCACE,eAACP,EAAD,WACE,cAACE,EAAD,UACE,eAACL,EAAD,kDACsC,cAAC,EAAD,oBADtC,aAIF,cAACK,EAAD,UACE,eAACL,EAAD,yBACa,cAAC,IAAD,CAAWW,KAAMlB,EAAamB,SAAUjB,IADrD,+BAEuB,cAAC,EAAD,oBAFvB,eC9CKkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a8b5281f.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nconst hundreddays = new Date(\"2021-12-31T00:00:00\");\r\n\r\nconst render = ({ days, hours, minutes, seconds }) => {\r\n  return (\r\n    <span>\r\n      {\" \"}\r\n      {days} days {hours} hours {minutes} minutes and {seconds} seconds left\r\n    </span>\r\n  );\r\n};\r\n\r\nconst Title = styled.h1`\r\n  font-family: \"Courier New\", monospace;\r\n  color: white;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  margin-top: 10%;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  background-color: black;\r\n  height: 100vh;\r\n  margin-left: auto;\r\n  \r\n  \r\n`;\r\n\r\nconst Row = styled.div`\r\n  \r\n  padding-top: 2vh;\r\n  \r\n  \r\n  \r\n`;\r\nexport const Col = styled.div`\r\n  flex: ${(props) => props.size};\r\n  padding: 2vw;\r\n`;\r\n\r\nexport const ÖMSpan = styled.span`\r\n  font-size: 1.5rem;\r\n  \r\n`;\r\n\r\nconst error404 = () => {\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Row>\r\n          <Title>\r\n            Error 404: not 100 days left until D<ÖMSpan>ÖM</ÖMSpan>D yet\r\n          </Title>\r\n        </Row>\r\n        <Row>\r\n          <Title >\r\n            It is days <Countdown date={hundreddays} renderer={render} /> until\r\n            100 days left until D<ÖMSpan>ÖM</ÖMSpan>D\r\n          </Title>\r\n        </Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default error404;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}